// src/core/ui/keyboards.ts
import { Markup } from 'telegraf';
import type { Ctx } from '@core/types.js';

export function adminMenuKeyboard() {
    return Markup.inlineKeyboard([
        [Markup.button.callback('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É', 'ADM_ADD_BTN')],
        [Markup.button.callback('üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É', 'ADM_EDIT_BTN')],
        [Markup.button.callback('üóë –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É', 'ADM_DEL_BTN')],
        [Markup.button.callback('üìã –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫', 'ADM_LIST_BTNS')],
        [Markup.button.callback('üí¨ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', 'ADM_SET_WELCOME')],
        [Markup.button.callback('üí° –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç payload', 'ADM_SET_RESPONSE')],
        [Markup.button.callback('‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'ADM_BACK_TO_MAIN')],
    ])
}

export function buildKeyboard(ctx: Ctx | undefined, chapter: string, config: any) {
    const rows = config.get().buttons
        .filter((b: any) => b.chapter === chapter)
        .map((b: any) =>
            b.type === 'callback'
                ? [Markup.button.callback(b.label, b.payload)]
                : [Markup.button.url(b.label, b.url)]
        )

    // ‚Ü©Ô∏è ¬´–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª ‚Äî –≤–æ –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö, –∫—Ä–æ–º–µ MAIN
    if (chapter !== 'MAIN') {
        rows.push([Markup.button.callback('‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'MAIN')])
    }

    // ‚öôÔ∏è Admin Panel ‚Äî –¢–û–õ–¨–ö–û –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    if (
        chapter === 'MAIN' &&                     // ‚Üê –∫–ª—é—á–µ–≤–∞—è –ø—Ä–∞–≤–∫–∞
        ctx &&
        ctx.chat?.type === 'private' &&
        ctx.from?.id &&
        config.isAdmin(ctx.from.id)
    ) {
        rows.push([Markup.button.callback('‚öôÔ∏è Admin Panel', 'ADMIN')])
    }

    return Markup.inlineKeyboard(rows)
}

